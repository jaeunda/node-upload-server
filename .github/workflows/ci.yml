name: CI/CD Pipeline 
on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

permissions:
    pull-requests: write

jobs:
    build-and-test:
        runs-on: ubuntu-latest
        outputs:
            lint_outcome: ${{ steps.lint.outcome }}
            test_outcome: ${{ steps.test.outcome }}
            build_outcome: ${{ steps.build.outcome }}
            dist_listing: ${{ steps.build.outputs.dist_listing }}
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Set up Node.js
            uses: actions/setup-node@v4
            with:
                node-version: 'lts/*'
                cache: 'npm'
            
          - name: Install Dependencies
            run: npm ci

          - name: Run Linter
            id: lint
            run: npm run lint --if-present

          - name: Run Tests
            id: test
            run: npm test --if-present

          - name: Build project
            id: build
            run: |
                set -o pipefail
                npm run build
                echo "dist_listing<<'EOF'" >> "$GITHUB_OUTPUT"
                (ls -la dist || echo "dist not found") >> "$GITHUB_OUTPUT"
                echo "EOF" >> "$GITHUB_OUTPUT"
            
    docker-build-and-push:
        needs: build-and-test
        runs-on: ubuntu-latest
        outputs:
            docker_outcome: ${{ steps.docker_build_push.outcome }}

        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Log in to Docker Hub
            uses: docker/login-action@v3
            with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_TOKEN }}

          - name: Docker Build & Push
            id: docker_build_push
            uses: docker/build-push-action@v5
            with:
                context: .
                push: true
                tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-upload-server:latest
    
    pr-comment:
        needs:
            - build-and-test
            - docker-build-and-push
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
          - name: Comment to PR
            if: always()
            uses: actions/github-script@v7
            with:
                script: |
                    const { lint_outcome, test_outcome, build_outcome, dist_listing } = ${{ toJSON(needs.build-and-test.outputs) }};
                    const { docker_outcome } = ${{ toJSON(needs.docker-build-and-push.outputs) }};

                    function getStatus(outcome) {
                        if (outcome === 'success') return { icon: '‚úÖ', text: 'Pass' };
                        if (outcome === 'failure') return { icon: '‚ùå', text: 'Fail' };
                        if (outcome === 'skipped') return { icon: '‚ûñ', text: 'Skip' };
                        return { icon: '‚ö™', text: 'Unknown' };
                    }

                    const lint = getStatus(lint_outcome);
                    const test = getStatus(test_outcome);
                    const build = getStatus(build_outcome);
                    const docker = getStatus(docker_outcome);
            
                    const isOverallFailure = [lint_outcome, test_outcome, build_outcome, docker_outcome].includes('failure');
                    const overallStatus = isOverallFailure ? getStatus('failure') : getStatus('success');

                    const runUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;

                    const body = `
                    ### ${overallStatus.icon} CI Overall: ${overallStatus.text}

                    | üîç Lint | üß™ Test | üîß Build | üê≥ Docker |
                    | :---: | :---: | :---: | :---: |
                    | ${lint.icon} ${lint.text} | ${test.icon} ${test.text} | ${build.icon} ${build.text} | ${docker.icon} ${docker.text} |

                    <details>
                    <summary>üì¶ Build Artifacts ( `dist/` )</summary>

                    \`\`\`
                    ${dist_listing}
                    \`\`\`
                    </details>

                    [View Full Log ‚Üó](${runUrl})
                    `;

                    await github.rest.issues.createComment({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        issue_number: context.issue.number,
                        body: body
                    });